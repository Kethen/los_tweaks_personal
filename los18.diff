
project build/make/
diff --git a/build/make/tools/buildinfo.sh b/build/make/tools/buildinfo.sh
index 954a01fb2..2f38ce35e 100755
--- a/build/make/tools/buildinfo.sh
+++ b/build/make/tools/buildinfo.sh
@@ -1,5 +1,8 @@
 #!/bin/bash
 
+date_flat=$($DATE)
+date_flat=$(echo $date_flat)
+
 echo "# begin build properties"
 echo "# autogenerated by buildinfo.sh"
 
@@ -16,7 +19,7 @@ echo "ro.build.version.release_or_codename=$PLATFORM_VERSION"
 echo "ro.build.version.security_patch=$PLATFORM_SECURITY_PATCH"
 echo "ro.build.version.base_os=$PLATFORM_BASE_OS"
 echo "ro.build.version.min_supported_target_sdk=$PLATFORM_MIN_SUPPORTED_TARGET_SDK_VERSION"
-echo "ro.build.date=`$DATE`"
+echo "ro.build.date=$date_flat"
 echo "ro.build.date.utc=`$DATE +%s`"
 echo "ro.build.type=$TARGET_BUILD_TYPE"
 echo "ro.build.user=$BUILD_USERNAME"
diff --git a/build/make/tools/buildinfo_common.sh b/build/make/tools/buildinfo_common.sh
index 673e06f3d..bcf8046a7 100755
--- a/build/make/tools/buildinfo_common.sh
+++ b/build/make/tools/buildinfo_common.sh
@@ -7,10 +7,13 @@ if [ "$#" -ne 1 ]; then
   exit 1
 fi
 
+date_flat=$($DATE)
+date_flat=$(echo $date_flat)
+
 echo "# begin common build properties"
 echo "# autogenerated by $0"
 
-echo "ro.${partition}.build.date=`$DATE`"
+echo "ro.${partition}.build.date=$date_flat"
 echo "ro.${partition}.build.date.utc=`$DATE +%s`"
 echo "ro.${partition}.build.fingerprint=$BUILD_FINGERPRINT"
 echo "ro.${partition}.build.id=$BUILD_ID"

project frameworks/base/
diff --git a/frameworks/base/packages/SystemUI/src/com/android/systemui/qs/tiles/UiModeNightTile.java b/frameworks/base/packages/SystemUI/src/com/android/systemui/qs/tiles/UiModeNightTile.java
index f777553bb5f..b88521e2482 100644
--- a/frameworks/base/packages/SystemUI/src/com/android/systemui/qs/tiles/UiModeNightTile.java
+++ b/frameworks/base/packages/SystemUI/src/com/android/systemui/qs/tiles/UiModeNightTile.java
@@ -96,7 +96,8 @@ public class UiModeNightTile extends QSTileImpl<QSTile.BooleanState> implements
         boolean nightMode = (mContext.getResources().getConfiguration().uiMode
                         & Configuration.UI_MODE_NIGHT_MASK) == Configuration.UI_MODE_NIGHT_YES;
 
-        if (powerSave) {
+        //if (powerSave) {
+        if (false) {
             state.secondaryLabel = mContext.getResources().getString(
                     R.string.quick_settings_dark_mode_secondary_label_battery_saver);
         } else if (uiMode == UiModeManager.MODE_NIGHT_AUTO
@@ -125,7 +126,8 @@ public class UiModeNightTile extends QSTileImpl<QSTile.BooleanState> implements
         state.contentDescription = TextUtils.isEmpty(state.secondaryLabel)
                 ? state.label
                 : TextUtils.concat(state.label, ", ", state.secondaryLabel);
-        if (powerSave) {
+        // if (powerSave) {
+        if (false) {
             state.state = Tile.STATE_UNAVAILABLE;
         } else {
             state.state = state.value ? Tile.STATE_ACTIVE : Tile.STATE_INACTIVE;
diff --git a/frameworks/base/services/core/java/com/android/server/UiModeManagerService.java b/frameworks/base/services/core/java/com/android/server/UiModeManagerService.java
index 4ff6dac08b8..75ef3ac9a8d 100644
--- a/frameworks/base/services/core/java/com/android/server/UiModeManagerService.java
+++ b/frameworks/base/services/core/java/com/android/server/UiModeManagerService.java
@@ -1123,10 +1123,10 @@ final class UiModeManagerService extends SystemService {
         }
 
         // Override night mode in power save mode if not in car mode
-        if (mPowerSave && !mCarModeEnabled && !mCar) {
+        /* if (mPowerSave && !mCarModeEnabled && !mCar) {
             uiMode &= ~Configuration.UI_MODE_NIGHT_NO;
             uiMode |= Configuration.UI_MODE_NIGHT_YES;
-        } else {
+        } else */{
             uiMode = getComputedUiModeConfiguration(uiMode);
         }
 

project packages/apps/Settings/
diff --git a/packages/apps/Settings/src/com/android/settings/display/DarkUIPreferenceController.java b/packages/apps/Settings/src/com/android/settings/display/DarkUIPreferenceController.java
index 98d9a69ea7..032c442819 100644
--- a/packages/apps/Settings/src/com/android/settings/display/DarkUIPreferenceController.java
+++ b/packages/apps/Settings/src/com/android/settings/display/DarkUIPreferenceController.java
@@ -107,6 +107,7 @@ public class DarkUIPreferenceController extends TogglePreferenceController imple
         if (mPreference == null) {
             return;
         }
+        /*
         boolean isBatterySaver = isPowerSaveMode();
         mPreference.setEnabled(!isBatterySaver);
         if (isBatterySaver) {
@@ -115,6 +116,7 @@ public class DarkUIPreferenceController extends TogglePreferenceController imple
                     : R.string.dark_ui_mode_disabled_summary_dark_theme_off;
             mPreference.setSummary(mContext.getString(stringId));
         }
+        */
     }
 
     @VisibleForTesting
diff --git a/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModeActivationPreferenceController.java b/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModeActivationPreferenceController.java
index 1027dac4e8..fdae23fa3a 100644
--- a/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModeActivationPreferenceController.java
+++ b/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModeActivationPreferenceController.java
@@ -64,7 +64,8 @@ public class DarkModeActivationPreferenceController extends BasePreferenceContro
     public final void updateState(Preference preference) {
 
         final boolean batterySaver = mPowerManager.isPowerSaveMode();
-        if (batterySaver) {
+        //if (batterySaver) {
+        if (false) {
             mTurnOnButton.setVisibility(View.GONE);
             mTurnOffButton.setVisibility(View.GONE);
             return;
diff --git a/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModePreference.java b/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModePreference.java
index 7fb8023573..ea92f6dd71 100644
--- a/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModePreference.java
+++ b/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModePreference.java
@@ -42,7 +42,8 @@ public class DarkModePreference extends MasterSwitchPreference {
         mPowerManager = context.getSystemService(PowerManager.class);
         mFormat = new TimeFormatter(context);
         mCallback = () -> {
-            final boolean batterySaver = mPowerManager.isPowerSaveMode();
+            //final boolean batterySaver = mPowerManager.isPowerSaveMode();
+            final boolean batterySaver = false;
             final boolean active = (getContext().getResources().getConfiguration().uiMode
                     & Configuration.UI_MODE_NIGHT_YES) != 0;
             setSwitchEnabled(!batterySaver);
diff --git a/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModeScheduleSelectorController.java b/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModeScheduleSelectorController.java
index 2ac9a9f863..7ee34b3c37 100644
--- a/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModeScheduleSelectorController.java
+++ b/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModeScheduleSelectorController.java
@@ -60,7 +60,8 @@ public class DarkModeScheduleSelectorController extends BasePreferenceController
 
     @Override
     public final void updateState(Preference preference) {
-        final boolean batterySaver = mPowerManager.isPowerSaveMode();
+        //final boolean batterySaver = mPowerManager.isPowerSaveMode();
+        final boolean batterySaver = false;
         mPreference.setEnabled(!batterySaver);
         mCurrentMode = getCurrentMode();
         mPreference.setValueIndex(mCurrentMode);
diff --git a/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModeSettingsFragment.java b/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModeSettingsFragment.java
index a5103b0aef..ebbb3063c8 100644
--- a/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModeSettingsFragment.java
+++ b/packages/apps/Settings/src/com/android/settings/display/darkmode/DarkModeSettingsFragment.java
@@ -146,7 +146,8 @@ public class DarkModeSettingsFragment extends DashboardFragment {
             new BaseSearchIndexProvider(R.xml.dark_mode_settings) {
                 @Override
                 protected boolean isPageSearchEnabled(Context context) {
-                    return !context.getSystemService(PowerManager.class).isPowerSaveMode();
+                    //return !context.getSystemService(PowerManager.class).isPowerSaveMode();
+                    return true;
                 }
             };
 
diff --git a/packages/apps/Settings/src/com/android/settings/homepage/contextualcards/slices/DarkThemeSlice.java b/packages/apps/Settings/src/com/android/settings/homepage/contextualcards/slices/DarkThemeSlice.java
index f934d587ed..5564a93cc3 100644
--- a/packages/apps/Settings/src/com/android/settings/homepage/contextualcards/slices/DarkThemeSlice.java
+++ b/packages/apps/Settings/src/com/android/settings/homepage/contextualcards/slices/DarkThemeSlice.java
@@ -93,8 +93,11 @@ public class DarkThemeSlice implements CustomSliceable {
                     "sKeepSliceShow = " + sKeepSliceShow + ", sSliceClicked = " + sSliceClicked
                             + ", isAvailable = " + isAvailable(mContext));
         }
+        /*
         if (mPowerManager.isPowerSaveMode()
                 || ((!sKeepSliceShow || !sSliceClicked) && !isAvailable(mContext))) {
+        */
+        if ((!sKeepSliceShow || !sSliceClicked) && !isAvailable(mContext)) {
             return new ListBuilder(mContext, CustomSliceRegistry.DARK_THEME_SLICE_URI,
                     ListBuilder.INFINITY)
                     .setIsError(true)
@@ -189,7 +192,8 @@ public class DarkThemeSlice implements CustomSliceable {
                 new ContentObserver(new Handler(Looper.getMainLooper())) {
                     @Override
                     public void onChange(boolean bChanged) {
-                        if (mContext.getSystemService(PowerManager.class).isPowerSaveMode()) {
+                        //if (mContext.getSystemService(PowerManager.class).isPowerSaveMode()) {
+                        if (false) {
                             notifySliceChange();
                         }
                     }

project system/extras/
diff --git a/system/extras/libfscrypt/fscrypt.cpp b/system/extras/libfscrypt/fscrypt.cpp
index a52ed90c..9ca47bf5 100644
--- a/system/extras/libfscrypt/fscrypt.cpp
+++ b/system/extras/libfscrypt/fscrypt.cpp
@@ -328,6 +328,28 @@ bool EnsurePolicy(const EncryptionPolicy& policy, const std::string& directory)
 
     bool already_encrypted = fscrypt_is_encrypted(fd);
 
+	if (kern_policy.v1.version == FSCRYPT_POLICY_V1){
+		if (kern_policy.v1.contents_encryption_mode == FSCRYPT_MODE_AES_256_HEH){
+			kern_policy.v1.contents_encryption_mode = FSCRYPT_MODE_AES_256_XTS;
+			LOG(ERROR) << "Disabled HEH for kern_policy.v1.contents_encryption_mode";
+		}
+		if (kern_policy.v1.filenames_encryption_mode == FSCRYPT_MODE_AES_256_HEH){
+			kern_policy.v1.filenames_encryption_mode = FSCRYPT_MODE_AES_256_CTS;
+			LOG(ERROR) << "Disabled HEH for kern_policy.v1.filenames_encryption_mode";
+		}
+	}else{
+		if (kern_policy.v2.contents_encryption_mode == FSCRYPT_MODE_AES_256_HEH){
+			kern_policy.v2.contents_encryption_mode = FSCRYPT_MODE_AES_256_XTS;
+			LOG(ERROR) << "Disabled HEH for kern_policy.v2.contents_encryption_mode";
+		}
+		if (kern_policy.v2.filenames_encryption_mode == FSCRYPT_MODE_AES_256_HEH){
+			kern_policy.v2.filenames_encryption_mode = FSCRYPT_MODE_AES_256_CTS;
+			LOG(ERROR) << "Disabled HEH for kern_policy.v2.filenames_encryption_mode";
+		}
+	}
+
+    LOG(ERROR) << "Setting encryption policy of " << directory << " to " << PolicyDebugString(policy);
+
     // FS_IOC_SET_ENCRYPTION_POLICY will set the policy if the directory is
     // unencrypted; otherwise it will verify that the existing policy matches.
     // Setting the policy will fail if the directory is already nonempty.

project system/vold/
diff --git a/system/vold/Utils.cpp b/system/vold/Utils.cpp
index 8ce1370..351ef54 100644
--- a/system/vold/Utils.cpp
+++ b/system/vold/Utils.cpp
@@ -996,6 +996,10 @@ bool IsFuseDaemon(const pid_t pid) {
 
 bool IsFilesystemSupported(const std::string& fsType) {
     std::string supported;
+    if (strcmp("f2fs", fsType.c_str()) == 0){
+    	PLOG(ERROR) << "Disabled f2fs";
+    	return false;
+    }
     if (!ReadFileToString(kProcFilesystems, &supported)) {
         PLOG(ERROR) << "Failed to read supported filesystems";
         return false;
